---
import siteConfig from '../../data/siteConfig.json';

const { site } = siteConfig.common;
const { navigation } = siteConfig.common;
const navItems = navigation.items;
const ctaButton = navigation.cta;
---

<header
  class="bg-stone-200 dark:bg-slate-900 shadow-md border-b border-stone-300 dark:border-slate-700"
>
  <div class="max-w-7xl mx-auto px-6 py-2 md:px-12 md:py-4">
    <div class="flex justify-between flex-2 items-center h-14 md:h-16">
      <section class="flex-shrink-0 flex items-center gap-2" aria-label="Site logo">
        <a href="/" class="header-logo flex items-center gap-2">
          <img
            id="siteLogo"
            src={`${import.meta.env.BASE_URL}assets/logo.svg`}
            alt={`${site.name} logo`}
            class="h-8 w-auto md:h-10 logo-filter"
            loading="eager"
          />
          <span class="sr-only">{site.name}</span>
        </a>
      </section>

      <nav class="hidden md:flex space-x-6" aria-label="Main navigation">
        {
          navItems.map((item) => (
            <a
              href={item.href}
              class="header-nav-link text-stone-700 dark:text-stone-300 hover:text-stone-900 dark:hover:text-stone-50 hover:bg-stone-100 dark:hover:bg-slate-800 px-3 py-2 transition-colors"
            >
              {item.label}
            </a>
          ))
        }
      </nav>

      <section class="hidden md:block" aria-label="Call to action">
        <button onclick="openBookingPopup()" class="btn-secondary">
          {ctaButton.label}
        </button>
      </section>

      <section class="flex md:hidden" aria-label="Mobile menu toggle">
        <button
          class="menu-btn mobile-menu-button header-menu-btn w-12 h-8 border-0 bg-transparent cursor-pointer p-0 text-black dark:text-stone-300 hover:text-gray-600 dark:hover:text-stone-50 focus:outline-none focus:ring-2 focus:ring-gray-400 dark:focus:ring-stone-50 focus:text-gray-600 dark:focus:text-stone-50 transition-colors"
          id="menuBtn"
          aria-label="Toggle mobile menu"
          aria-expanded="false"
          aria-controls="mobile-menu"
        >
          <span class="sr-only">Toggle mobile menu button</span>
          <svg class="w-full h-full" viewBox="0 0 48 32" aria-hidden="true">
            <line
              class="line top transition-transform duration-200 ease-in-out origin-center motion-reduce:transition-none"
              x1="4"
              y1="8"
              x2="44"
              y2="8"
              stroke="currentColor"
              stroke-width="1"
              stroke-linecap="round"
              style="transform-box: fill-box;"></line>
            <line
              class="line bottom transition-transform duration-200 ease-in-out origin-center motion-reduce:transition-none"
              x1="4"
              y1="24"
              x2="44"
              y2="24"
              stroke="currentColor"
              stroke-width="1"
              stroke-linecap="round"
              style="transform-box: fill-box;"></line>
          </svg>
        </button>
      </section>
    </div>

    <nav
      class="mobile-menu hidden md:hidden fixed top-0 left-0 right-0 bottom-0 z-40 bg-white dark:bg-slate-900 border-t dark:border-slate-700"
      id="mobile-menu"
      aria-label="Mobile navigation"
      style="top: 72px;"
    >
      <section class="px-5 py-8">
        <section class="mb-6" aria-label="Navigation links">
          {
            navItems.map((item) => (
              <a
                href={item.href}
                class="block px-0 py-3 text-2xl leading-9 font-medium tracking-tight text-black dark:text-stone-50 hover:text-gray-600 dark:hover:text-stone-300 transition-colors"
              >
                {item.label}
              </a>
            ))
          }
        </section>
        <section class="px-0 py-3" aria-label="Call to action">
          <button onclick="openBookingPopup()" class="btn-secondary w-full text-center block">
            {ctaButton.label}
          </button>
        </section>
      </section>
    </nav>
  </div>
</header>

<style>
  .menu-btn:hover:not(.active) .line {
    transform: scaleX(0.8);
  }

  .menu-btn.active .top {
    transform: translateY(8px) rotate(-45deg);
  }
  .menu-btn.active .bottom {
    transform: translateY(-8px) rotate(45deg);
  }

  header.menu-active {
    background-color: white !important;
  }

  header.menu-active .header-logo,
  header.menu-active .header-nav-link,
  header.menu-active .header-menu-btn {
    color: black !important;
  }
  .logo-black {
    filter: brightness(0) invert(0);
  }

  .logo-filter {
    filter: brightness(0) saturate(100%) invert(0%);
  }

  @media (prefers-color-scheme: dark) {
    .logo-filter {
      filter: brightness(0) saturate(100%) invert(100%);
    }
  }
</style>

<script defer>
  document.addEventListener('DOMContentLoaded', function () {
    const btn = document.getElementById('menuBtn');
    const mobileMenu = document.querySelector('.mobile-menu');
    const navLinks = mobileMenu?.querySelectorAll('a[href^="#"]');

    function toggleMenu() {
      const isExpanded = btn?.getAttribute('aria-expanded') === 'true';
      btn?.setAttribute('aria-expanded', (!isExpanded).toString());
      btn?.classList.toggle('active');
      mobileMenu?.classList.toggle('hidden');
      const header = document.querySelector('header');
      header?.classList.toggle('menu-active');
      // Change logo color to black when menu is open (mobile)
      const logo = document.getElementById('siteLogo');
      if (header?.classList.contains('menu-active')) {
        logo?.classList.add('logo-black');
        logo?.classList.remove('logo-filter');
      } else {
        logo?.classList.remove('logo-black');
        logo?.classList.add('logo-filter');
      }
    }

    function closeMenu() {
      btn?.setAttribute('aria-expanded', 'false');
      btn?.classList.remove('active');
      mobileMenu?.classList.add('hidden');
      document.querySelector('header')?.classList.remove('menu-active');
    }

    btn?.addEventListener('click', toggleMenu);

    // Close menu when navigation link is clicked
    navLinks?.forEach((link) => {
      link.addEventListener('click', closeMenu);
    });
  });
</script>
